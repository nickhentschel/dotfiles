#-----------------------------------------------
# GENERAL SETTINGS
#-----------------------------------------------

# set-option -g status-position top
set-option -g default-shell /bin/zsh

set-window-option -g xterm-keys on

# Bind C-b to C-a, its just easier
set-option -g prefix C-a

set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# enable wm window titles
set -g set-titles on

# enable auto renaming
setw -g automatic-rename on

# wm window title string (uses statusbar variables)
set -g set-titles-string "[#I] #W"

# Scroll History
set -g history-limit 30000

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set-option -s escape-time 10

# decrease repeat-time (default is 500ms)
set-option -g repeat-time 250

# mouse stuff

# Make mouse useful in copy mode
setw -g mode-mouse on

# Allow mouse to select which pane to use
set -g mouse-select-pane on

# Allow mouse dragging to resize panes
set -g mouse-resize-pane on

# Allow mouse to select windows
set -g mouse-select-window on

#-----------------------------------------------
# BINDINGS
#-----------------------------------------------

# send the prefix to client inside window
bind-key a send-prefix

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xsel -ip'
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X rectangle-toggle
bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi 'PPage' send -X page-up
bind-key -T copy-mode-vi 'NPage' send -X page-down

# bind -t vi-copy y copy-pipe "xclip -sel clip -i"

# if-shell '[[ $(uname -s) =~ "darwin" ]]' 'set-option -g default-command "reattach-to-user-namespace -l zsh"'
# if-shell '[[ $(uname -s) =~ "darwin" ]]' 'bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"'

# Toggle make pane full screen
bind = resize-pane -Z

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind \ split-window -h
bind - split-window -v

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#-----------------------------------------------
# LOOK AND FEEL
#-----------------------------------------------

# status line
set -g status-justify left
set -g status-bg default
set -g status-interval 10

# messaging
# set -g message-fg colour9
# set -g message-bg default
set -g message-command-fg green
set -g message-command-bg default

# window status
setw -g window-status-format "#[fg=black]#[bg=colour12] #I #[fg=white]#[bg=black] #W "
setw -g window-status-current-format "#[fg=black]#[bg=colour7] #I #[fg=black]#[bg=colour15] #W "

# Info on left (no session display)
set -g status-left ''
set -g status-right ''
