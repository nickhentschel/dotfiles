######## FUNCTIONS ########

path() {
  echo $PATH | tr ":" "\n" | \
    awk "{ sub(\"/usr\",   \"$fg_no[cyan]/usr$reset_color\"); \
    sub(\"/bin\",   \"$fg_no[blue]/bin$reset_color\"); \
    sub(\"/opt\",   \"$fg_no[magenta,bold]/opt$reset_color\"); \
    sub(\"/sbin\",  \"$fg_no[magenta]/sbin$reset_color\"); \
    sub(\"/local\", \"$fg_no[yellow]/local$reset_color\"); \
    print }"
}

######## EXPORTS AND OTHER SETTINGS #######

export WORDCHARS=''
export CASE_SENSITIVE="true"
export ZSH_CACHE_DIR=$HOME/.zsh
export GOPATH=$HOME/go
export PYENV_ROOT="$HOME/.pyenv"
export NPM_PACKAGES="${HOME}/.npm-packages"
export EDITOR=vim
export REPORTTIME=5
export TIMEFMT="%U user %S system %P cpu %*Es total"
export LESS="ij.5KMRX"
export MANWIDTH=80
export PAGER=less
export HISTSIZE=100000
export SAVEHIST=100000
export HISTFILE=~/.zsh_history
export HISTIGNORE="ls:cd:cd -:pwd:exit:* --help"
export KEYTIMEOUT=1
export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.cfg=00;32:*.conf=00;32:*.diff=00;32:*.doc=00;32:*.ini=00;32:*.log=00;32:*.patch=00;32:*.pdf=00;32:*.ps=00;32:*.tex=00;32:*.txt=00;32:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'

######## PATH CONFIGURATION ########

# Initialize PATH with system paths
if [ -x /usr/libexec/path_helper ]; then
  eval `/usr/libexec/path_helper -s`
fi

# System paths
PATH="/opt/homebrew/bin:/opt/homebrew/sbin:/opt/local/bin:/opt/local/sbin:/opt/local/libexec/gnubin:/usr/local/sbin:$PATH"

# Application paths
[ -d "/Applications/Cursor.app" ] && PATH="$PATH:/Applications/Cursor.app/Contents/Resources/app/bin"

# User-specific paths
PATH="$HOME/go/bin:${KREW_ROOT:-$HOME/.krew}/bin:$NPM_PACKAGES/bin:$PYENV_ROOT/bin:$GOPATH/bin:$HOME/.fzf/bin:$HOME/.local/bin:$PATH"
export PATH

######## ZSH OPTIONS ########

# History options
setopt share_history append_history extended_history hist_no_store hist_ignore_all_dups hist_ignore_space

# Globbing and pattern matching
setopt EXTENDED_GLOB
setopt NOMATCH

# User experience options
setopt NO_BEEP
setopt TRANSIENT_RPROMPT
setopt COMPLETE_IN_WORD

# Directory options
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS

# Redirection options
setopt no_clobber

# Prompt options
setopt prompt_subst

######## COMPLETIONS ########

# Load completions system
zmodload -i zsh/complist
zstyle :compinstall filename '~/.zshrc'
autoload -Uz compinit && compinit

# Auto rehash commands
# http://www.zsh.org/mla/users/2011/msg00531.html
zstyle ':completion:*' rehash true

# For all completions: menuselection
zstyle ':completion:*' menu select=1

# For all completions: grouping the output
zstyle ':completion:*' group-name ''

# For all completions: color
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# For all completions: selected item
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS} ma=0\;47

# Completion of .. directories
zstyle ':completion:*' special-dirs true

# Fault tolerance
zstyle ':completion:*' completer _complete _correct _approximate
# (1 error on 3 characters)
zstyle -e ':completion:*:approximate:*' max-errors 'reply=( $(( ($#PREFIX+$#SUFFIX)/3 )) numeric )'

# Case insensitivity
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

# For all completions: grouping / headline / ...
zstyle ':completion:*:messages' format $'\e[01;35m -- %d -- \e[00;00m'
zstyle ':completion:*:warnings' format $'\e[01;31m -- No Matches Found -- \e[00;00m'
zstyle ':completion:*:descriptions' format $'\e[01;33m -- %d -- \e[00;00m'
zstyle ':completion:*:corrections' format $'\e[01;33m -- %d -- \e[00;00m'

# Statusline for many hits
zstyle ':completion:*:default' select-prompt $'\e[01;35m -- Match %M    %P -- \e[00;00m'

# For all completions: show comments when present
zstyle ':completion:*' verbose yes

# Case-insensitive -> partial-word (cs) -> substring completion:
zstyle ':completion:*' matcher-list 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# Caching of completion stuff
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path "$ZSH_CACHE"

# ~dirs: reorder output sorting: named dirs over userdirs
zstyle ':completion::*:-tilde-:*:*' group-order named-directories users

# ssh: reorder output sorting: user over hosts
zstyle ':completion::**:ssh:*:*' tag-order "users hosts"

# rm: advanced completion (e.g. bak files first)
zstyle ':completion::*:rm:*:*' file-patterns '*.o:object-files:object\ file *(~|.(old|bak|BAK)):backup-files:backup\ files *~*(~|.(o|old|bak|BAK)):all-files:all\ files'

# vi: advanced completion (e.g. tex and rc files first)
zstyle ':completion::*:vi:*:*' file-patterns 'Makefile|*(rc|log)|*.(php|tex|bib|sql|zsh|ini|sh|vim|rb|sh|js|tpl|csv|rdf|txt|phtml|tex|py|n3):vi-files:vim\ likes\ these\ files *~(Makefile|*(rc|log)|*.(log|rc|php|tex|bib|sql|zsh|ini|sh|vim|rb|sh|js|tpl|csv|rdf|txt|phtml|tex|py|n3)):all-files:other\ files'

# Application-specific completions
if type helm > /dev/null 2>&1; then
  source <(helm completion zsh)
fi

######## ALIASES #######

alias c="clear"
alias d="dirs -v"
alias k="kubectl"
alias h="helm"
alias grep="grep --color=always"
alias ll="ls -lachp"
alias ls="ls -ph --color=always"
alias mounts="cat /proc/mounts | column -t"
alias timestamp="date +%s"

# Use ripgrep instead of grep if available
if type rg > /dev/null 2>&1; then
  alias grep="rg"
fi

# Use neovim instead of vim if available
if type nvim > /dev/null 2>&1; then
  alias vim="nvim"
  export EDITOR="nvim"
fi

######## KEY BINDINGS ########
stty -ixon
zmodload zsh/complist

bindkey -v
autoload -Uz edit-command-line
# bindkey -M menuselect '^[[Z' reverse-menu-complete

bindkey -M vicmd 'u' undo
bindkey -M vicmd '~' vi-swap-case
bindkey '^u' vi-change-whole-line

######## FZF CONFIGURATION ########

# Load fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Use fd for path generation if available
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

######## PROMPT CONFIGURATION ########

autoload colors && colors

# Updates editor information when the keymap changes.
zle-keymap-select() {
  zle reset-prompt
  zle -R
}

# Cache git info to improve performance
function _git_prompt_info() {
  # Only check for git info every 5 seconds to avoid slowdowns
  if [[ -z "$_CACHED_GIT_INFO" || $(( $(date +%s) - $_CACHED_GIT_TIMESTAMP )) -gt 5 ]]; then
    ref=$(git symbolic-ref HEAD 2> /dev/null)
    if [[ $? -eq 0 ]]; then
      _CACHED_GIT_INFO="%{$fg[green]%}(${ref#refs/heads/})%f "
    else
      _CACHED_GIT_INFO=""
    fi
    _CACHED_GIT_TIMESTAMP=$(date +%s)
  fi

  echo "$_CACHED_GIT_INFO"
}

_vi_mode_indicator() {
  case $KEYMAP in
    vicmd) print -n ':' ;;
    *) print -n '%#' ;;
  esac
}

# Precalculate static prompt elements
function precmd() {
  # Pre-compute the shortened path
  _SHORT_PATH="%{$fg_bold[blue]%}%(5~|%-1~/…/%3~|%4~)%f"

  # Pre-compute the host part
  if [[ $EUID -eq 0 ]]; then
    _HOST="%{$fg_bold[red]%}%n@%3m%f"
  else
    _HOST="%{$fg_bold[green]%}%n@%3m%f"
  fi
}

# Initialize static variables
precmd

simplicity_zsh_theme() {
  # Use pre-computed values
  PROMPT='%{$fg[red]%}%(1j.● .)%f$_HOST:$_SHORT_PATH%{$reset_color%}$(_git_prompt_info)%{$fg_bold[blue]%}%{$reset_color%}$(_vi_mode_indicator)%f '

  zle -N zle-keymap-select
}

simplicity_zsh_theme
